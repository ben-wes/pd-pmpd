#N canvas 719 47 710 866 10;
#X msg 30 74 reset;
#X obj 30 816 dac~;
#X obj 229 748 osc~ 444;
#X text 70 74 clear everything;
#X text 99 777 arg1 : number of audio inlets (min 1);
#X text 99 791 arg2 : number of audio outlets (min 1);
#X msg 183 606 setD \$1 \$2;
#X msg 110 606 setK \$1 \$2;
#X msg 104 570 setM \$1 \$2;
#X msg 93 425 outSpeed \$1 \$2 \$3;
#X msg 52 146 link \$1 \$2 \$3 \$4 \$5;
#X msg 169 717 bang;
#X msg 64 177 NLlink \$1 \$2 \$3 \$4 \$5 \$6 \$7 \$8;
#X text 19 38 all these messages need to be sent only once to create the structure of a physical model:;
#X text 179 140 connect two masses (\$1 and \$2) with link rigidity \$3 \, damping \$4 and length \$5;
#X text 256 176 like the link message \, but with extra arguments :;
#X text 277 191 \$5 is the exponent for the non-linear rigidity;
#X text 277 205 \$6 is the length of the link;
#X text 277 219 \$7 and \$8 are the min and max length of the link;
#X text 98 337 the same inlet can be used to move several masses and send forces to them through multiple inForce and inPos messages for this inlet, f 90;
#X text 89 276 you can send many forces to a single mass \, the resulting force will be the sum of all forces, f 92;
#X text 113 448 the output of an outlet is the sum of the contributions of all out* messages, f 76;
#X text 93 479 these messages interact with the simulation in real time:;
#X text 180 531 send force \$2 to mass \$1;
#X text 203 716 print the current state of the model in the console;
#X text 285 747 interaction with the simulation at audio rate;
#X msg 122 660 setNLD \$1 \$2;
#X msg 207 660 setNLL \$1 \$2;
#X msg 119 638 setNLK \$1 \$2 \$3;
#X text 254 606 change link settings;
#X text 219 637 change rigidity \$2 of NLlink \$1 with exponent \$3;
#X text 289 660 change damping and length of NLlink;
#X text 328 682 change min and max length of NLlink;
#X msg 126 682 setNLLMin \$1 \$2;
#X msg 228 682 setNLLMax \$1 \$2;
#X text 99 805 arg3 : oversample factor (useful to run the simulation faster than audio rate);
#X text 163 6 pmpd~ : 1d particle-based physical modeling for audio synthesis, f 66;
#X msg 74 253 inForce \$1 \$2 \$3;
#X text 184 247 signal on inlet \$1 sends force to mass \$2 with amplitude \$3, f 43;
#X msg 79 314 inPos \$1 \$2 \$3;
#X text 177 308 signal on inlet \$1 controls position of mass \$2 with amplitude \$3, f 41;
#X text 187 381 connect the position of mass \$2 to outlet \$1 with amplitude \$3, f 38;
#X msg 83 388 outPos \$1 \$2 \$3;
#X text 209 419 connect the velocity of mass \$2 to outlet \$1 with amplitude \$3, f 36;
#X msg 93 504 posX \$1 \$2;
#X msg 98 531 forceX \$1 \$2;
#X text 164 503 change the position \$2 of a fixed mass \$1;
#X msg 41 108 mass \$1 \$2 \$3;
#X text 133 101 create a mass with arguments : weight of the mass (\$1) \, initial position (\$2). A mass with weight 0 will not move., f 65;
#X obj 30 778 pmpd~ 1 1;
#X text 176 569 change mass, f 12;
#X connect 0 0 49 0;
#X connect 2 0 49 0;
#X connect 7 0 49 0;
#X connect 8 0 49 0;
#X connect 9 0 49 0;
#X connect 10 0 49 0;
#X connect 11 0 49 0;
#X connect 12 0 49 0;
#X connect 26 0 49 0;
#X connect 28 0 49 0;
#X connect 33 0 49 0;
#X connect 37 0 49 0;
#X connect 39 0 49 0;
#X connect 42 0 49 0;
#X connect 44 0 49 0;
#X connect 45 0 49 0;
#X connect 47 0 49 0;
#X connect 49 0 1 0;
#X connect 49 0 1 1;
